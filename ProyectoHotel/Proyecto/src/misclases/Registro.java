/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package misclases;

import java.awt.GraphicsConfiguration;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import misclases.recibo;

/**
 *
 * @author fer_o
 */
public class Registro extends javax.swing.JFrame {
    private MySqlConn conn=new MySqlConn();
    
   Connection con=conn.conn;
   int dispo[]=new int[15];
   int extra;
    /**
     * Creates new form 
     */
   

    public Registro(String string) throws HeadlessException {
        super(string);
    }


    public Registro(GraphicsConfiguration gc) {
        super(gc);
    }
    public Registro() {
       
        initComponents();
        
        this.jButtonReservar.setVisible(false);
         this.jLabelHbitacion.setVisible(false);
       
        this.jComboBoxHab.setVisible(false);
        
    }
    public void hotellleno(){
        ArrayList <Huesped> lista = new ArrayList();
        String query = "select * from huespedes where nombre IS NOT NULL";
        this.conn.Consult(query);
        int n = 0;
        try {
            this.conn.rs.last();
            n = this.conn.rs.getRow();
            this.conn.rs.first();
        } catch (Exception e) {
            System.out.println("Error#1 ...");
        }
        if (n==30) {
                JOptionPane.showMessageDialog(this, "Hotel lleno");
            dispose();
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelDatos = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldNopmbre = new javax.swing.JTextField();
        jTextFieldTipoHab = new javax.swing.JTextField();
        jTextFieldCiudad = new javax.swing.JTextField();
        jTextFieldPersonaspH = new javax.swing.JTextField();
        jTextFieldDias = new javax.swing.JTextField();
        jButtonDisponibilidad = new javax.swing.JButton();
        jLabelHbitacion = new javax.swing.JLabel();
        jButtonReservar = new javax.swing.JButton();
        jComboBoxHab = new javax.swing.JComboBox();
        jDateChooserFecha = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelDatos.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("DialogInput", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("DATOS");

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Nombre:");

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Tipo de habitacion:");

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Ciudad:");

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Personas por habitacion");

        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Dias a hospedarse:");

        jTextFieldNopmbre.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldNopmbre.setForeground(new java.awt.Color(0, 0, 0));
        jTextFieldNopmbre.setText(" ");
        jTextFieldNopmbre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTextFieldTipoHab.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldTipoHab.setForeground(new java.awt.Color(0, 0, 0));
        jTextFieldTipoHab.setText(" ");
        jTextFieldTipoHab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextFieldTipoHab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTipoHabActionPerformed(evt);
            }
        });

        jTextFieldCiudad.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldCiudad.setForeground(new java.awt.Color(0, 0, 0));
        jTextFieldCiudad.setText(" ");
        jTextFieldCiudad.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTextFieldPersonaspH.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldPersonaspH.setForeground(new java.awt.Color(0, 0, 0));
        jTextFieldPersonaspH.setText(" ");
        jTextFieldPersonaspH.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTextFieldDias.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldDias.setForeground(new java.awt.Color(0, 0, 0));
        jTextFieldDias.setText(" ");
        jTextFieldDias.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButtonDisponibilidad.setBackground(new java.awt.Color(0, 0, 0));
        jButtonDisponibilidad.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDisponibilidad.setText("Disponibilidad");
        jButtonDisponibilidad.setBorder(null);
        jButtonDisponibilidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDisponibilidadActionPerformed(evt);
            }
        });

        jLabelHbitacion.setForeground(new java.awt.Color(0, 0, 0));
        jLabelHbitacion.setText("Seleccione Habitacion");

        jButtonReservar.setBackground(new java.awt.Color(0, 0, 0));
        jButtonReservar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonReservar.setText("Reservar");
        jButtonReservar.setBorder(null);
        jButtonReservar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReservarActionPerformed(evt);
            }
        });

        jComboBoxHab.setBackground(new java.awt.Color(204, 204, 204));
        jComboBoxHab.setForeground(new java.awt.Color(0, 0, 0));
        jComboBoxHab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jDateChooserFecha.setBackground(new java.awt.Color(204, 204, 204));
        jDateChooserFecha.setDateFormatString("yyyy/MM/dd");

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Ingrese la fecha de llegada");

        javax.swing.GroupLayout jPanelDatosLayout = new javax.swing.GroupLayout(jPanelDatos);
        jPanelDatos.setLayout(jPanelDatosLayout);
        jPanelDatosLayout.setHorizontalGroup(
            jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosLayout.createSequentialGroup()
                .addGap(316, 316, 316)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanelDatosLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDatosLayout.createSequentialGroup()
                                .addComponent(jTextFieldTipoHab, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosLayout.createSequentialGroup()
                                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel7))
                                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                                        .addComponent(jTextFieldNopmbre, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jDateChooserFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(34, 34, 34))))
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDatosLayout.createSequentialGroup()
                                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelHbitacion)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxHab, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldDias, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)))
                            .addGroup(jPanelDatosLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldPersonaspH, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(337, 339, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonDisponibilidad, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(116, 116, 116)
                .addComponent(jButtonReservar)
                .addGap(281, 281, 281))
        );

        jPanelDatosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel2, jLabel3, jLabel4, jLabel5});

        jPanelDatosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTextFieldCiudad, jTextFieldDias, jTextFieldNopmbre, jTextFieldPersonaspH, jTextFieldTipoHab});

        jPanelDatosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButtonDisponibilidad, jButtonReservar});

        jPanelDatosLayout.setVerticalGroup(
            jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldNopmbre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDateChooserFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldTipoHab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPersonaspH))
                .addGap(28, 28, 28)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelHbitacion)
                    .addComponent(jComboBoxHab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonReservar)
                    .addComponent(jButtonDisponibilidad, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(118, 118, 118))
        );

        jPanelDatosLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jTextFieldDias, jTextFieldPersonaspH});

        jPanelDatosLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jTextFieldCiudad, jTextFieldNopmbre, jTextFieldTipoHab});

        jPanelDatosLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButtonDisponibilidad, jButtonReservar});

        getContentPane().add(jPanelDatos, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 720, 480));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDisponibilidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDisponibilidadActionPerformed
     
        boolean band=true,band2=true;  
            int dias2=0, personas2=0, tipo=0;
            String nombre = this.jTextFieldNopmbre.getText().trim();
            String th = this.jTextFieldTipoHab.getText().trim();
            String ciudad = this.jTextFieldCiudad.getText().trim();
            String personas = this.jTextFieldPersonaspH.getText().trim();
            String dias = this.jTextFieldDias.getText().trim();
            String aux = ((JTextField) jDateChooserFecha.getDateEditor().getUiComponent()).getText();
           
            if(nombre.isEmpty()){
                band=false;
                JOptionPane.showMessageDialog(null, "Ingrese el nombre de la persona");
            }
            if(ciudad.isEmpty()){
                band=false;
                JOptionPane.showMessageDialog(null, "Ingrese el nombre de la ciudad");
            }
            if(aux.isEmpty()){
               band=false; 
               JOptionPane.showMessageDialog(null, "Ingrese la fecha de llegada");
            }
            if(dias.isEmpty()){
                band=false;
                JOptionPane.showMessageDialog(null, "Ingrese los dias a hospedarse ");
            }
            if(personas.isEmpty()){
                band=false;
                JOptionPane.showMessageDialog(null, "Ingrese la cantidad de personas a hospedarse");
            }
            if(th.isEmpty()){
                band=false;
                JOptionPane.showMessageDialog(null, "Ingrese el tipo de habitacion deseada");
            }
            if(band==true){
              
                dias2 = Integer.parseInt(dias);
               personas2 = Integer.parseInt(personas);
               tipo = Integer.parseInt(th);
            }
            
            switch (tipo) {
                case 1: {
                    if(personas2==1){
                        band=true;
                    }else{
                        if(personas2>1 && personas2<4){
                            this.extra=(personas2-1);
                           int op=JOptionPane.showConfirmDialog(this,"Desea agregar las "+this.extra+" personas extra?    \n El costo por persona extra es de $200");
                           if(op==0){
                               band=true;
                           }else{
                               band=false;
                           }
                            //JOptionPane.showMessageDialog(null, "El precio por persona extra es 200, y usted tiene "+this.extra+" extra");
                        }else{
                            band=false;
                            JOptionPane.showMessageDialog(null, "Numero de personas inválido");
                        }
                    }                    
                    break;
                }
                case 2: {
                    if(personas2==2 || personas2==1){
                        band=true;
                    }else{
                        if(personas2>=3 && personas2<5){
                            this.extra=(personas2-2);
                            int op=JOptionPane.showConfirmDialog(this,"Desea agregar las "+this.extra+" personas extra?  \n   El costo por persona extra es de $200");
                           if(op==0){
                               band=true;
                           }else{
                               band=false;
                           }
                            //JOptionPane.showMessageDialog(null, "El precio por persona extra es 200, y usted tiene "+this.extra+" extra");
                        }else{
                            band=false;
                            JOptionPane.showMessageDialog(null, "Numero de personas inválido");
                        }
                    } 
                    break;
                }
                case 3: {
                    if(personas2==3 || personas2==2 || personas2==1){
                        band=true;
                    }else{
                        if(personas2>3 && personas2<6){
                            this.extra=(personas2-3);
                            int op=JOptionPane.showConfirmDialog(this,"Desea agregar las "+this.extra+"personas extra?  \n   El costo por persona extra es de $200");
                           if(op==0){
                               band=true;
                           }else{
                               band=false;
                           }
                            //JOptionPane.showMessageDialog(null, "El precio por persona extra es 200, y usted tiene "+this.extra+" extra");
                        }else{
                       
                            band=false;
                            JOptionPane.showMessageDialog(null, "Numero de personas inválido");
                        }
                    } 
                    break;
                }
                default: {
                    band=false;
                    JOptionPane.showMessageDialog(null, "Tipo de habitacion no valido");
                    break;
                }
            }
        if(!band==false){
           /* Calendar z=this.jDateChooserFecha.getCalendar();
            Calendar nueva=this.dispofecha(z,dias2 );
            Huesped x=new Huesped();
            x.setCiudadOrigen(ciudad);
            x.setEstancia(dias2);
            x.setIngreso(z);
            x.setSalida(nueva);
            x.setNombre(nombre);
            x.setPersonas(personas2);
            x.setTipohab(tipo);*/
            this.habitacionesdisp(tipo);
            
            //new Disponibilidad().setVisible(true);
           this.jButtonReservar.setVisible(true);
            this.jTextFieldCiudad.disable();
            this.jTextFieldDias.disable();
            this.jTextFieldNopmbre.disable();
            this.jTextFieldPersonaspH.disable();
            this.jTextFieldTipoHab.disable();
           
            this.jLabelHbitacion.setVisible(true);
            
           
            
        }else{
            this.jTextFieldPersonaspH.setText("");
            if(band2==false){
                this.jTextFieldTipoHab.setText("");
            }
        }
        

        
        //this.jPanelDatos.setVisible(false);
        //this.jPanelDisponibilidad.setVisible(true);
    }//GEN-LAST:event_jButtonDisponibilidadActionPerformed

    private void jButtonReservarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReservarActionPerformed
        // TODO add your handling code here:
            String nombre = this.jTextFieldNopmbre.getText().trim();
            String th = this.jTextFieldTipoHab.getText().trim();
            String ciudad = this.jTextFieldCiudad.getText().trim();
            String personas = this.jTextFieldPersonaspH.getText().trim();
            String dias = this.jTextFieldDias.getText().trim();
            String aux = ((JTextField) jDateChooserFecha.getDateEditor().getUiComponent()).getText();
           
            
             int  dias2 = Integer.parseInt(dias);
             int  personas2 = Integer.parseInt(personas);
              int tipo = Integer.parseInt(th);
            
            Calendar z=this.jDateChooserFecha.getCalendar();
            Calendar nueva=this.dispofecha(z,dias2 );
            Huesped x=new Huesped();
            x.setCiudadOrigen(ciudad);
            x.setEstancia(dias2);
            x.setIngreso(z);
            x.setSalida(nueva);
            x.setNombre(nombre);
            x.setPersonas(personas2);
            x.setTipohab(tipo);
            
            
            String aux3=this.jComboBoxHab.getSelectedItem().toString();
            
            int  nhab= Integer.parseInt(aux3);
           // int nhab=Integer.parseInt(hab);
            if(this.correcto(x, nhab)){
                new recibo(x,this.extra,aux,nhab).setVisible(true);
                dispose();
                
            }else{
                JOptionPane.showMessageDialog(this, "ERROR, habitacion no valida");
            }
            
    }//GEN-LAST:event_jButtonReservarActionPerformed

    private void jTextFieldTipoHabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTipoHabActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTipoHabActionPerformed

    
    public Calendar dispofecha(Calendar fecha,int dias){
        fecha.add(Calendar.DATE, dias);
        return fecha;
    }
    
    public void habitacionesdisp(int th){
        
         ArrayList <Huesped> lista = new ArrayList();
        String query="select * from huespedes where tipohab ='"+th+"' && nombre IS NULL";
        this.conn.Consult(query);
        int n=0;
        try{
        this.conn.rs.last();
        n=this.conn.rs.getRow();
        this.conn.rs.first();
        }catch(Exception e){
            System.out.println("Error#1 ...");
        }
        if (n != 0) {
            
            DefaultComboBoxModel modelo= new DefaultComboBoxModel();
            int datos[]=new int [3];
            String nombre="";
            for (int i = 0; i < n; i++) {
                try{
               Huesped x=new Huesped();
               datos[0]=this.conn.rs.getInt(2);
               datos[1]=this.conn.rs.getInt(8);
               datos[2]=this.conn.rs.getInt(7);
               nombre=this.conn.rs.getString(1);
               x.setTipohab(datos[0]);
               x.setNumhab(datos[1]);
               x.setPiso(datos[2]);
               lista.add(x);
                modelo.addElement(x.getNumhab());
                this.conn.rs.next();
                }catch(Exception e){
                    System.out.println("Error#2 ..."+ e.getMessage());
            }
        }
             this.jComboBoxHab.setModel(modelo);
             this.jComboBoxHab.setVisible(true);
            //int dispo[]=new int[15];
            for (int i = 0; i < lista.size(); i++) {
                dispo[i]=lista.get(i).getNumhab();
            }
            new Disponibilidad(dispo).setVisible(true);
            
           
        }else{
            JOptionPane.showMessageDialog(this, "Tipo de habitacion lleno..");
            dispose();
            new Registro().setVisible(true);
        }
            
    }
    public boolean correcto(Huesped x,int hab){
        
        boolean res=false,band2=false;
        if((hab>=100 && hab<=115) || (hab>=200 && hab<=215)){
            res=true;
        }else{
            return false;
        }
        /*if((hab<=100 || hab>115)){
            if(hab>115 && hab<=200){
                
                return false;
                
            }else{
                if(hab>215){
                    
                    return false;
                }
            }
            //return false;
            
        }else{
            if(hab>115 && hab<=200){
                
                return false;
                
            }else{
                if(hab>215){
                    
                    return false;
                }
            }
            return false;
        }*/
        for (int i = 0; i < 15; i++) {
            if (hab == this.dispo[i]) {
                band2=true;
                String dia = String.valueOf(x.salida.get(Calendar.DATE)) ;
                String mes = String.valueOf(x.salida.get(Calendar.MONTH) + 1) + "/"; //'2021/06/09
                String año = String.valueOf(x.salida.get(Calendar.YEAR))+"/";
                String union = año + mes + dia;//17/02/21
                System.out.println(union);
                int ale=(int)(Math.random()*( 5  - 1 +1)+1); 
                int costo=ale*100;
                switch(x.getTipohab()){//2000,4000,6000
                    case 1:
                         costo=((this.extra*200)+costo)+(x.getEstancia()*2000);
                        break;
                    case 2:
                        costo=((this.extra*200)+costo)+(x.getEstancia()*4000);
                        break;
                    case 3:
                        costo=((this.extra*200)+costo)+(x.getEstancia()*6000);
                        break;
                }
               
                String aux = ((JTextField) jDateChooserFecha.getDateEditor().getUiComponent()).getText();
                System.out.println(aux);
                String actual="UPDATE huespedes SET nombre='" + x.getNombre() + "',"
                            + "ciudad='" + x.getCiudadOrigen() + "',ingreso='" + aux + "',personas='" + x.getPersonas()
                            + "',estancia='" + x.getEstancia()+"',salida='"+union
                            + "',extra='" + costo + "',servicios='"+ale+"' WHERE numhab='" + hab + "'";
                System.out.println(actual);
                    
         
                //AQUI VA EL RECIBO
                try {
                    PreparedStatement pps = this.con.prepareStatement(actual);
                    pps.executeUpdate();
                } catch (SQLException ex) {
                    System.out.println("no jalo");
                }
            }
                
            
            
        }
        if (band2 == false) {
            return false;
        }

      return res;
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registro().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDisponibilidad;
    private javax.swing.JButton jButtonReservar;
    private javax.swing.JComboBox jComboBoxHab;
    private com.toedter.calendar.JDateChooser jDateChooserFecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelHbitacion;
    private javax.swing.JPanel jPanelDatos;
    private javax.swing.JTextField jTextFieldCiudad;
    private javax.swing.JTextField jTextFieldDias;
    private javax.swing.JTextField jTextFieldNopmbre;
    private javax.swing.JTextField jTextFieldPersonaspH;
    private javax.swing.JTextField jTextFieldTipoHab;
    // End of variables declaration//GEN-END:variables
}
