/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package misclases;

import com.itextpdf.text.DocumentException;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author fer_o
 */
public class Salida extends javax.swing.JFrame {
    private MySqlConn conn=new MySqlConn();
    
   Connection con=conn.conn;
   ArrayList<Huesped> lista = new ArrayList();
    /**
     * Creates new form Salida
     */
    public Salida() {
        initComponents();
        this.jTextFieldPago.setEnabled(false);
       
        this.jTextAreaCostosExtra.setVisible(false);
         DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        ////
        //ArrayList<Huesped> lista = new ArrayList();
        String query = "select * from huespedes where nombre IS NOT NULL";
        this.conn.Consult(query);
        int n = 0;
        try {
            this.conn.rs.last();
            n = this.conn.rs.getRow();
            this.conn.rs.first();
        } catch (Exception e) {
            System.out.println("Error#1 ...");
        }
        if (n != 0) {
            System.out.println("n " + n);

            int datos[] = new int[5];
            String nombre = "",ciudad="";
            for (int i = 0; i < n; i++) {
                try {
                    Huesped x = new Huesped();
                    datos[0] = this.conn.rs.getInt(2);//tipohab
                    datos[1] = this.conn.rs.getInt(8);//numhab
                    datos[2] = this.conn.rs.getInt(7);//piso
                    datos[3] = this.conn.rs.getInt(5);//personasPhab
                    datos[4] = this.conn.rs.getInt(6);//estancia
                    ciudad=this.conn.rs.getString(3);//ciudad
                    nombre = this.conn.rs.getString(1);//nombre
                    x.setTipohab(datos[0]);
                    x.setNumhab(datos[1]);
                    x.setPiso(datos[2]);
                    x.setPersonas(datos[3]);
                    x.setEstancia(datos[4]);
                    x.setNombre(nombre);
                    x.setCiudadOrigen(ciudad);
                    lista.add(x);
                    modelo.addElement(x.getNumhab());
                    this.conn.rs.next();
                } catch (Exception e) {
                    System.out.println("Error#2 ..." + e.getMessage());
                }
            }
            this.jComboBoxHab.setModel(modelo);
        } else {
            JOptionPane.showMessageDialog(this, "No hay datos ...");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaCostosExtra = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldPago = new javax.swing.JTextField();
        jButtonCheckOut = new javax.swing.JButton();
        jComboBoxHab = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("SALIDA");

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Habitacion:");

        jTextAreaCostosExtra.setColumns(20);
        jTextAreaCostosExtra.setRows(5);
        jTextAreaCostosExtra.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));
        jScrollPane1.setViewportView(jTextAreaCostosExtra);

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Total a pagar:");

        jTextFieldPago.setForeground(new java.awt.Color(255, 0, 0));
        jTextFieldPago.setText(" ");

        jButtonCheckOut.setBackground(new java.awt.Color(0, 153, 153));
        jButtonCheckOut.setText("Check Out");
        jButtonCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCheckOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldPago, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxHab, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jButtonCheckOut)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(200, 200, 200))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jComboBoxHab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextFieldPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49)
                        .addComponent(jButtonCheckOut)
                        .addGap(64, 64, 64))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCheckOutActionPerformed
        // TODO add your handling code here:
        Huesped y = new Huesped();
        String hab=this.jComboBoxHab.getSelectedItem().toString();
       String ing = null,sal = null;
        int  nhab= Integer.parseInt(hab);
        String tiposervicios[]={"Servicio de comida al cuarto","Servicio de Bar","Tintoreria","SPA","Ni√±era"};
         int res=0,servicios=0;
        
        
            String query = "select * from huespedes where numhab ='" + nhab + "'";
            this.conn.Consult(query);
            int n = 0;
            try {
                this.conn.rs.last();
                n = this.conn.rs.getRow();
                this.conn.rs.first();
            } catch (Exception e) {
                System.out.println("Error#1 ...");
            }
            if (n != 0) {

               

                for (int i = 0; i < n; i++) {
                    try {
                        y.setNombre(this.conn.rs.getString(1));
                        y.setCiudadOrigen(this.conn.rs.getString(3));
                        y.setTipohab(this.conn.rs.getInt(2));
                        ing=this.conn.rs.getString(4);
                        sal=this.conn.rs.getString(10);
                        y.setEstancia(this.conn.rs.getInt(6));
                        y.setExtra(this.conn.rs.getInt(9));
                        res = this.conn.rs.getInt(9);
                        servicios=this.conn.rs.getInt(11);

                        this.conn.rs.next();
                    } catch (Exception e) {
                        System.out.println("Error#2 ..." + e.getMessage());
                    }
                }

               
                String res2 = String.valueOf(res);
                this.jTextFieldPago.setText(res2);
                this.jTextAreaCostosExtra.append("                        SERVICIOS \n");
                for (int i = 0; i < servicios; i++) {
                    this.jTextAreaCostosExtra.append("\n"+tiposervicios[i]+"=100");
                }
                this.jTextAreaCostosExtra.setVisible(true);
            //int dispo[]=new int[15];

            //String columnas[]={"Habitacion","Paciente","Diagnostico"};
                // jTableConsulta2.setModel(new DefaultTableModel(datos,columnas));
            } else {
                JOptionPane.showMessageDialog(this, "No hay datos ...");
            }
        
        String parte1="Insert into ganancias(precio) VALUES (";
                 String parte2="'"+res+"')";
                String query2= parte1+parte2; 
                    
            this.conn.Update(query2);
        String actual="UPDATE huespedes SET nombre=null, ciudad=null, personas=null, estancia=null, extra=null, servicios=null WHERE numhab='"+nhab+"'";
        System.out.println(actual);
                //AQUI VA EL RECIBO
                try {
                    PreparedStatement pps = this.con.prepareStatement(actual);
                    pps.executeUpdate();
                } catch (SQLException ex) {
                    System.out.println("Error");
                }
                try {   
          
            new Pdf(y,ing,sal,servicios);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Salida.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(Salida.class.getName()).log(Level.SEVERE, null, ex);
        }
                
    }//GEN-LAST:event_jButtonCheckOutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Salida.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Salida.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Salida.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Salida.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Salida().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCheckOut;
    private javax.swing.JComboBox jComboBoxHab;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaCostosExtra;
    private javax.swing.JTextField jTextFieldPago;
    // End of variables declaration//GEN-END:variables
}
